<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai_CZBooks_webApi</name>
    </assembly>
    <members>
        <member name="T:senai_CZBooks_webApi.Controllers.AutorController">
            <summary>
            Controlador responsavel pelo autor
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.AutorController._autorRepository">
            <summary>
            Objeto _autorRepository que irá receber todos os métodos definidos na interface IAutorRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.#ctor">
            <summary>
            Instancia o objeto _autorRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.Get">
            <summary>
            Lista todos os autores
            </summary>
            <returns>retorna uma lista de autores com status code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.Post(senai_CZBooks_webApi.Domains.Autor)">
            <summary>
            Cadastra um novo autor
            </summary>
            <param name="novoAutor">objeto que será cadastrado</param>
            <returns>retorna um novo autor cadastrado</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.Put(System.Int32,senai_CZBooks_webApi.Domains.Autor)">
            <summary>
            Atualiza um autor existente
            </summary>
            <param name="id">ID do autor que será atualizado</param>
            <param name="autorUpdate">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.Delete(System.Int32)">
            <summary>
            Deleta um autor existente
            </summary>
            <param name="id">Id do autor a ser deletado</param>
            <returns>Um StatusCode 204 - No Content</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.AutorController.GetMy">
            <summary>
            Lista todos os livros de um determinado usuário
            </summary>
            <returns>Uma lista de presenças e um status code 200 - Ok</returns>
            dominio/api/autor/minhas
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.BibliotecaController">
            <summary>
            Controlador responsavel pelas bibliotecas
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.BibliotecaController._bibliotecaRepository">
            <summary>
            Objeto _bibliotecaRepository que irá receber todos os métodos definidos na interface IBibliotecaRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.#ctor">
            <summary>
            Instancia o objeto _bibliotecaRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.Get">
            <summary>
            Lista de todas as bibliotecas
            </summary>
            <returns>retorna uma lista de bibliotecas com status code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.GetById(System.Int32)">
            <summary>
            Busca uma biblioteca através do seu ID
            </summary>
            <param name="id">id da biblioteca buscada</param>
            <returns>stauts code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.Post(senai_CZBooks_webApi.Domains.Biblioteca)">
            <summary>
            Cadastra uma nova biblioteca
            </summary>
            <param name="novaBiblioteca">objeto que seraá cadastrado</param>
            <returns>stauts code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.Put(System.Int32,senai_CZBooks_webApi.Domains.Biblioteca)">
            <summary>
            Atualiza uma biblioteca existente
            </summary>
            <param name="id">id da biblioteca atualizada</param>
            <param name="bibliotecaUpdate">objeto que será atualizado</param>
            <returns>retorna um status code 204</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.BibliotecaController.Delete(System.Int32)">
            <summary>
            deleta uma biblioteca existente
            </summary>
            <param name="id">id da biblioteca deletada</param>
            <returns>retorna um status code 204</returns>
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.LivrosController">
            <summary>
            Controlador responsavel pelos LIVROS
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.LivrosController._livroRepository">
            <summary>
            Objeto _livroRepository que irá receber todos os métodos definidos na interface ILivroRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.#ctor">
            <summary>
            Instancia o objeto _livroRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.Get">
            <summary>
            Lista todos os livros
            </summary>
            <returns>retorna uma lista de autores com status code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.GetById(System.Int32)">
            <summary>
            Busca um livro pelo seu id
            </summary>
            <param name="id">Id do livro buscado</param>
            <returns>livro buscado e um StatusCode 200 - Ok</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.Post(senai_CZBooks_webApi.Domains.Livro)">
            <summary>
            Cadastra um novo livro
            </summary>
            <param name="novoLivro">objeto q será cadastrado</param>
            <returns>retorna um status code 201</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.Put(System.Int32,senai_CZBooks_webApi.Domains.Livro)">
            <summary>
            Atualiza um livro existente
            </summary>
            <param name="id">id que será atualizado</param>
            <param name="livroUpdate">objeto que será atualizado</param>
            <returns>retorna um status code 204</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LivrosController.Delete(System.Int32)">
            <summary>
            Deleta um livro existente
            </summary>
            <param name="id">Id do livro a ser deletado</param>
            <returns>Um StatusCode 204 - No Content</returns>
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.LoginController">
            <summary>
            Controller responsável pelos endpoints (URLs) referentes aos Logins
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.LoginController._usuarioRepository">
            <summary>
            Objeto _usuarioRepository que irá receber todos os métodos definidos na interface IuUsuarioRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.LoginController.Post(senai_CZBooks_webApi.LoginViewModels.LoginViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
            dominio/api/Login
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.TipoLivroController">
            <summary>
            Controlador responsavel pelos tipos de livros
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.TipoLivroController._tipoLivroRepository">
            <summary>
            Objeto _tipoLivroRepository que irá receber todos os métodos definidos na interface ITipoLivroRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.#ctor">
            <summary>
            Instancia o objeto _tipoLivroRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.Get">
            <summary>
            Lista todos os tipos de livros
            </summary>
            <returns></returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.GetById(System.Int32)">
            <summary>
            Busca um tipo de livroa través do seu id
            </summary>
            <param name="id">id do tipo de livro buscado</param>
            <returns>retorna um status code 200 e o tipo de livro buscado</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.Post(senai_CZBooks_webApi.Domains.TipoLivro)">
            <summary>
            Cadastra um novo tipo de livro
            </summary>
            <param name="novoTipoLivro">objet que sera cadastrado</param>
            <returns>retorna um status code 201</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.Put(System.Int32,senai_CZBooks_webApi.Domains.TipoLivro)">
            <summary>
            Atualiza um tipo de livro existente
            </summary>
            <param name="id">id do tipo de livro atualizado</param>
            <param name="tipoLivroUpdate">objeto que sera atualizado</param>
            <returns>retorna um status code 204</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoLivroController.Delete(System.Int32)">
            <summary>
            Deleta um tipo de livro existente
            </summary>
            <param name="id">id do tipo de livro deletado</param>
            <returns>retorna um tipo de lvro deletado e um status code 204</returns>
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.TipoUsuarioController">
            <summary>
            Controlador responsavel pelos tipos usuarios
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.TipoUsuarioController._tiposUsuarioRepository">
            <summary>
            Objeto _tiposUsuarioRepository que irá receber todos os métodos definidos na interface ITiposUsuarioRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.#ctor">
            <summary>
            Instancia o objeto _tiposUsuarioRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.Get">
            <summary>
            Lista todos os tipos de usuários
            </summary>
            <returns>Uma lista de tipos de usuários e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.GetById(System.Int32)">
            <summary>
            Busca um tipo de usuário através do ID
            </summary>
            <param name="id">ID do tipo de usuário que será buscado</param>
            <returns>Um tipo de usuário buscado e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.Post(senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Cadastra um novo tipo de usuário
            </summary>
            <param name="novoTipousuario">Objeto novoTipoUsuario que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.Put(System.Int32,senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Atualiza um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será atualizado</param>
            <param name="tipoUsuarioAtualizado">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.TipoUsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="T:senai_CZBooks_webApi.Controllers.UsuarioController">
            <summary>
            Controlador responsavel por Usuarios
            </summary>
        </member>
        <member name="P:senai_CZBooks_webApi.Controllers.UsuarioController._usuarioRepository">
            <summary>
            Objeto _usuarioRepository que irá receber todos os métodos definidos na interface IuUsuarioRepository
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.#ctor">
            <summary>
            Instancia o objeto _usuarioRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.Get">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Uma lista de usuários e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Busca um usuário pelo seu id
            </summary>
            <param name="id">Id do usuário buscado</param>
            <returns>Um usuario buscado e um StatusCode 200 - Ok</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.Post(senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.Put(System.Int32,senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="usuarioUpdate">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um usuário existente
            </summary>
            <param name="id">Id do usuário a ser deletado</param>
            <returns>Um StatusCode 204 - No Content</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.Cadastrar(senai_CZBooks_webApi.Domains.Autor)">
            <summary>
            Cadastra um novo autor
            </summary>
            <param name="novoAutor">objeto que sera cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.Listar">
            <summary>
            Lista todos os autores
            </summary>
            <returns>retorna uma lista de autores</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um autor atraves do id
            </summary>
            <param name="id">id que será buscado</param>
            <returns>retorna o id do autor buscada </returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.Autor)">
            <summary>
            Atualiza umm autor existente atrevés do seu id
            </summary>
            <param name="id">id do autor atualizado</param>
            <param name="autorUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.Deletar(System.Int32)">
            <summary>
            deleta um autor existente
            </summary>
            <param name="id">objeto que será deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IAutorRepository.ListarMeus(System.Int32)">
            <summary>
            Lista todos os livros de um determinado usuario
            </summary>
            <param name="id">id do livro que será listado</param>
            <returns>retorna a lista de livros</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.ITipoUsuarioRepository.Listar">
            <summary>
            Lista de tiposUsuarios
            </summary>
            <returns>retorna uma lista de usuarios</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.ITipoUsuarioRepository.Cadastrar(senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Cadastra um novo tipo de usuario
            </summary>
            <param name="novoTipoUsuario">objeto que será cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.ITipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de usuario através do seu id
            </summary>
            <param name="id">id do tipo usuario buscado</param>
            <returns></returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.ITipoUsuarioRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Atualiza um tipo de usuario existente através do seu id
            </summary>
            <param name="id">id do usuario existente</param>
            <param name="tipoUsuarioUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.ITipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Delta um tipo de usuario existente
            </summary>
            <param name="id">id do tipo de usuario deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Uma lista de usuários</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuário através do ID
            </summary>
            <param name="id">ID do usuário que será buscado</param>
            <returns>Um usuário buscado</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.Cadastrar(senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="usuarioUpdate">Objeto com as novas informações</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuário existente
            </summary>
            <param name="id">ID do usuário que será deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo Usuario que foi buscado</returns>ns>
        </member>
        <member name="T:senai_CZBooks_webApi.Repositories.AutorRepository">
            <summary>
            Repositório responsavel por Autor
            </summary>
        </member>
        <member name="F:senai_CZBooks_webApi.Repositories.AutorRepository.ctx">
            <summary>
            Objeto contexto que sera chamado ao EF Core
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.AutorRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um autor existente através do seu id
            </summary>
            <param name="id">objeto que será buscado</param>
            <returns>retorna o autor buscado e um status code 200</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.AutorRepository.Deletar(System.Int32)">
            <summary>
            Deleta um autor existente
            </summary>
            <param name="id">objeto que será deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.AutorRepository.Listar">
            <summary>
            Lista todos os autores
            </summary>
            <returns>retorna uma lista de autores</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.BibliotecaRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.Biblioteca)">
            <summary>
            Atualiza uma biblioteca existente
            </summary>
            <param name="id">id da biblioteca que será atualizada</param>
            <param name="bibliotecaUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.BibliotecaRepository.BuscarPorId(System.Int32)">
            <summary>
            busca uma biblioteca através do seu ID
            </summary>
            <param name="id">id da biblioteca buscada</param>
            <returns>retorna todas as bibliotecas buscadas</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.BibliotecaRepository.Cadastrar(senai_CZBooks_webApi.Domains.Biblioteca)">
            <summary>
            Cadastra uma nova biblioteca
            </summary>
            <param name="novaBiblioteca">objeto da nova biblioteca que será cadastrada</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.BibliotecaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma biblioteca através do seu ID
            </summary>
            <param name="id">id da biblioteca que será deletada</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.BibliotecaRepository.Listar">
            <summary>
            Lista todas as bibliotecas
            </summary>
            <returns> retorna uma lista de bibliotecas</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.LivroRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.Livro)">
            <summary>
            Atualiza todos os livros existentes
            </summary>
            <param name="id">id do livro atualizado</param>
            <param name="livroUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.LivroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um livro através do seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.LivroRepository.Cadastrar(senai_CZBooks_webApi.Domains.Livro)">
            <summary>
            Cadastra um novo livro
            </summary>
            <param name="novoLivro">retorna o novo livro e um status code 200</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.LivroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um livro através do seu ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.LivroRepository.Listar">
            <summary>
            Lista todos os livros
            </summary>
            <returns>status code 200 com todos os livros listados</returns>
        </member>
        <member name="F:senai_CZBooks_webApi.Repositories.TipoLivroRepository.ctx">
            <summary>
            Objeto contexto que sera chamado ao EF Core
            </summary>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoLivroRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.TipoLivro)">
            <summary>
            Atualiza um tipo de livro existente
            </summary>
            <param name="id">id do tipo de livro atualizado</param>
            <param name="tipoLivroUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoLivroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um livro através do seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoLivroRepository.Cadastrar(senai_CZBooks_webApi.Domains.TipoLivro)">
            <summary>
            Cadastra um novo tipo de livro
            </summary>
            <param name="novoLivro">objeto que sera cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoLivroRepository.Deletar(System.Int32)">
            <summary>
            deleta um  tipo de usuario
            </summary>
            <param name="id">id do tipo usuario de será deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoLivroRepository.Listar">
            <summary>
            lista todos os tipos usuarios
            </summary>
            <returns>retorna uma lista de tipos usuarios</returns>
        </member>
        <member name="T:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository">
            <summary>
            repositório responsavel por TipoUsuario
            </summary>
        </member>
        <member name="F:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.ctx">
            <summary>
            Objeto contexto que será chamado o EF Core
            </summary>       
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Atualiza um tipo usuario existente
            </summary>
            <param name="id">id do TIPO usuario atualizado</param>
            <param name="tipoUsuarioUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um tipo de usuario através do seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.Cadastrar(senai_CZBooks_webApi.Domains.TiposUsuario)">
            <summary>
            Cadastra um novo tipo de usuario
            </summary>
            <param name="novoTipoUsuario">objeto que será cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            deleta um tipo de usuario
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.TipoUsuarioRepository.Listar">
            <summary>
            Lista todos os tipos de usuarios
            </summary>
            <returns>retorna uma lista de tipos usuarios</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.Atualizar(System.Int32,senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Atualiza um uusario existente através do seu id
            </summary>
            <param name="id">id do objeto que será atualizado</param>
            <param name="usuarioUpdate">objeto que será atualizado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuario através do seu ID
            </summary>
            <param name="id">objeto que será buscado</param>
            <returns>retorna o usuario buscado através </returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.Cadastrar(senai_CZBooks_webApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuário existente
            </summary>
            <param name="id">ID do usuário que será deletado</param>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Uma lista de usuários</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo Usuario que foi buscado</returns>ns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.BuscarAutorId(System.Int32)">
            <summary>
            Busca um autor através do seu id
            </summary>
            <param name="id">retorna o id do autor</param>
            <returns>retorna o autor buscado</returns>
        </member>
        <member name="M:senai_CZBooks_webApi.Repositories.UsuarioRepository.BuscarClienteId(System.Int32)">
            <summary>
            busca um cliente através do seu id
            </summary>
            <param name="id">retorna o id do cliente</param>
            <returns>retorna o cliente buscado</returns>
        </member>
    </members>
</doc>
